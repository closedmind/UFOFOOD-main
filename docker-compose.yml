version: "3.8"
services:
  proxy:
    restart: always
    ports:
      - 8080:80
    build:
      context: docker
      dockerfile: proxy.Dockerfile
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./application:/var/www/application
    depends_on:
      - app
    
  app:
    restart: always
    build:
      context: docker
      dockerfile: app.Dockerfile
    # env_file:
    #   - config/debug/xdebug.env
    volumes:
      - ./application:/var/www/application
      - ./config/php.ini:/usr/local/etc/php/php.ini:ro
    depends_on:
      - mysql

  # db_pgsql:
  #   restart: always
  #   ports:
  #     - 5433:5432
  #   build:
  #     context: docker
  #     dockerfile: db_pgsql.Dockerfile
  #   env_file:
  #     - config/sql/postgres.env
  #   volumes:
  #     - .:/docker-entrypoint-initdb.d
  #     - dbdata:/var/lib/postgresql/data

  mysql:
        image: mysql:5.7
        container_name: mysql
        restart: unless-stopped
        # command: --default-authentication-plugin=mysql_native_password
        # command: --innodb_use_native_aio=0
        ports:
          - "3306:3306"
        volumes:
          - ./data/mysql:/var/lib/mysql
        # Задаем пароль для root пользователя
        environment:
          MYSQL_ROOT_PASSWORD: root

  composer:
    build:
      context: docker
      dockerfile: composer.Dockerfile
    volumes:
      - ./application:/var/www/application

  # npm:
  #   build:
  #     context: docker
  #     dockerfile: npm.Dockerfile
  #   volumes:
  #     - ./application:/var/www/application

  # artisan:
  #   build:
  #     context: docker
  #     dockerfile: app.Dockerfile
  #   volumes:
  #     - ./application:/var/www/application
  #   entrypoint: ["php", "/var/www/application/artisan"]

volumes:
  dbdata:
    driver: local